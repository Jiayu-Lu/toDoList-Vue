{"remainingRequest":"C:\\Users\\Owner\\toDoList-Vue\\todolist\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Owner\\toDoList-Vue\\todolist\\src\\components\\ListHeader.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Owner\\toDoList-Vue\\todolist\\src\\components\\ListHeader.vue","mtime":1629766971285},{"path":"C:\\Users\\Owner\\toDoList-Vue\\todolist\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Owner\\toDoList-Vue\\todolist\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Owner\\toDoList-Vue\\todolist\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Owner\\toDoList-Vue\\todolist\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQge25hbm9pZH0gZnJvbSAnbmFub2lkJw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJMaXN0SGVhZGVyIiwNCiAgcHJvcHM6IFsiYWRkVG9kbyJdLA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICB0ZXh0OiAiIg0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGFkZCgpIHsNCiAgICAgIGlmKCF0aGlzLnRleHQudHJpbSgpKSByZXR1cm4gYWxlcnQoIklucHV0IGNhbm5vdCBiZSBlbXB0eSIpDQogICAgICBjb25zdCB0b2RvT2JqID0ge2lkOiBuYW5vaWQoKSwgdGl0bGU6IHRoaXMudGV4dCwgZG9uZTogZmFsc2V9DQogICAgICB0aGlzLmFkZFRvZG8odG9kb09iaikNCiAgICAgIHRoaXMudGV4dCA9ICIiDQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["ListHeader.vue"],"names":[],"mappings":";;;;;;;AAOA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ListHeader.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"todo-header\">\r\n    <b-form-input v-model=\"text\" placeholder=\"Enter a task and press enter\" @keyup.enter=\"add\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {nanoid} from 'nanoid'\r\n\r\nexport default {\r\n  name: \"ListHeader\",\r\n  props: [\"addTodo\"],\r\n  data() {\r\n    return {\r\n      text: \"\"\r\n    }\r\n  },\r\n  methods: {\r\n    add() {\r\n      if(!this.text.trim()) return alert(\"Input cannot be empty\")\r\n      const todoObj = {id: nanoid(), title: this.text, done: false}\r\n      this.addTodo(todoObj)\r\n      this.text = \"\"\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.todo-header {\r\n\r\n}\r\n</style>"]}]}